/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./init.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./Elements.js":
/*!*********************!*\
  !*** ./Elements.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Element = /*#__PURE__*/function () {\n  function Element(gl) {\n    _classCallCheck(this, Element);\n\n    this.gl = gl;\n    this.Index;\n    this.indexLength;\n    this.VBOList = [];\n    this.cap = [];\n    this.unCap = [];\n    this.uniform = {};\n    this.texture = {\n      0: null\n    };\n    this.stencilSetting = [this.gl.ALWAYS, 1, ~0, this.gl.KEEP, this.gl.KEEP, this.gl.KEEP];\n    this.colorIndex;\n    this.colorLength;\n  }\n\n  _createClass(Element, [{\n    key: \"setCapability\",\n    value: function setCapability(cap) {\n      this.cap.push(cap);\n    }\n  }, {\n    key: \"unSetCapability\",\n    value: function unSetCapability(cap) {\n      this.unCap.push(cap);\n    }\n  }, {\n    key: \"setTexture\",\n    value: function setTexture(unit, texture) {\n      this.texture[unit] = texture;\n    }\n  }, {\n    key: \"setUniform\",\n    value: function setUniform(key, value) {\n      this.uniform[key] = value;\n    }\n  }, {\n    key: \"setStencil\",\n    value: function setStencil(func, ref, mask, fail, zfail, zpass) {\n      this.stencilSetting = [func, ref, mask, fail, zfail, zpass];\n    }\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      var newColor = [];\n\n      for (var _i = 0; _i < this.colorLength; _i++) {\n        newColor.push(color[0], color[1], color[2], color[3]);\n      }\n\n      this.VBOList[this.colorIndex] = w.create_vbo(newColor);\n    }\n  }]);\n\n  return Element;\n}(); // class Merge {\n//     constructor (gl, ) {\n//         this.element = {};\n//         this.mergeInstance = [];\n//         this.uniform = {};\n//         this.texture = null;\n//         this.textureUnit = 0;\n//     }\n//     setElement (element) {\n//         if(element.constructor.name=='Merge') {\n//             this.mergeInstance.push(element);\n//             return;\n//         } else if (this.element[element.constructor.name] == undefined) {\n//             this.element[element.constructor.name] = [];\n//         }\n//         this.element[element.constructor.name].push(Object.create(element));\n//     }\n//     setTexture (unit, texture) {\n//         this.texture = texture;\n//         this.textureUnit = unit;\n//     }\n//     setUniform (key, value) {\n//         this.uniform[key] = value;\n//     }\n//     // setPersonalMMatrix (element, mMatrix) {\n//     //     // jsは全て参照渡しなのでこれでおけ\n//     //     let mvpMatrix = this.element[element.constructor.name].uniform['mvpMatrix'];\n//     //     m.multiply(mvpMatrix, mMatrix, mvpMatrix);\n//     // }\n// }\n\n\nvar Point = /*#__PURE__*/function (_Element) {\n  _inherits(Point, _Element);\n\n  function Point(gl) {\n    _classCallCheck(this, Point);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Point).call(this, gl));\n  }\n\n  _createClass(Point, [{\n    key: \"init\",\n    value: function init(shader, color) {\n      var dataDictionary = {\n        'position': w.create_vbo([.0, .0, .0]),\n        'normal': w.create_vbo([1., 1., 1.]),\n        'color': w.create_vbo(color),\n        'textureCoord': w.create_vbo([0, 0])\n      };\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = shader.attList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          this.VBOList.push(dataDictionary[key]);\n\n          if (key == 'color') {\n            this.colorIndex = i;\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.colorLength = 1;\n      this.indexLength = 1;\n      this.Index = w.create_ibo([0]);\n      return this;\n    }\n  }]);\n\n  return Point;\n}(Element);\n\nvar Cube = /*#__PURE__*/function (_Element2) {\n  _inherits(Cube, _Element2);\n\n  function Cube(gl) {\n    _classCallCheck(this, Cube);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Cube).call(this, gl));\n  }\n\n  _createClass(Cube, [{\n    key: \"init\",\n    value: function init(shader, color) {\n      var data = cube(1, color);\n      var dataDictionary = {\n        'position': w.create_vbo(data.p),\n        'normal': w.create_vbo(data.n),\n        'color': w.create_vbo(data.c),\n        'textureCoord': w.create_vbo(data.t)\n      };\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = shader.attList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n          this.VBOList.push(dataDictionary[key]);\n\n          if (key == 'color') {\n            this.colorIndex = i;\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.colorLength = data.p.length / 3;\n      this.indexLength = data.i.length;\n      this.Index = w.create_ibo(data.i);\n      return this;\n    }\n  }]);\n\n  return Cube;\n}(Element);\n\nvar Sphere = /*#__PURE__*/function (_Element3) {\n  _inherits(Sphere, _Element3);\n\n  function Sphere(gl) {\n    _classCallCheck(this, Sphere);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Sphere).call(this, gl));\n  }\n\n  _createClass(Sphere, [{\n    key: \"init\",\n    value: function init(shader, nVertex, color) {\n      var data = sphere(nVertex, nVertex, 1, color);\n      var dataDictionary = {\n        'position': w.create_vbo(data.p),\n        'normal': w.create_vbo(data.n),\n        'color': w.create_vbo(data.c),\n        'textureCoord': w.create_vbo(data.t)\n      };\n      var i = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = shader.attList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var key = _step3.value;\n          this.VBOList.push(dataDictionary[key]);\n\n          if (key == 'color') {\n            this.colorIndex = i;\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.colorLength = data.p.length / 3;\n      this.indexLength = data.i.length;\n      this.Index = w.create_ibo(data.i);\n      return this;\n    }\n  }]);\n\n  return Sphere;\n}(Element);\n\nvar Torus = /*#__PURE__*/function (_Element4) {\n  _inherits(Torus, _Element4);\n\n  function Torus(gl) {\n    _classCallCheck(this, Torus);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Torus).call(this, gl));\n  }\n\n  _createClass(Torus, [{\n    key: \"init\",\n    value: function init(shader, nVertex, irad, orad, color) {\n      var data = torus(nVertex, nVertex, irad, orad, color);\n      var dataDictionary = {\n        'position': w.create_vbo(data.p),\n        'normal': w.create_vbo(data.n),\n        'color': w.create_vbo(data.c),\n        'textureCoord': w.create_vbo(data.t)\n      };\n      var i = 0;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = shader.attList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n          this.VBOList.push(dataDictionary[key]);\n\n          if (key == 'color') {\n            this.colorIndex = i;\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this.indexLength = data.i.length;\n      this.Index = w.create_ibo(data.i);\n      return this;\n    }\n  }]);\n\n  return Torus;\n}(Element);\n\nvar Texture = /*#__PURE__*/function (_Element5) {\n  _inherits(Texture, _Element5);\n\n  function Texture(gl) {\n    _classCallCheck(this, Texture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Texture).call(this, gl));\n  }\n\n  _createClass(Texture, [{\n    key: \"init\",\n    value: function init(shader) {\n      var position = [-1.0, 1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0];\n      var color = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];\n      var index = [0, 2, 1, 3, 1, 2];\n      var dataDictionary = {\n        'position': w.create_vbo(position),\n        'color': w.create_vbo(color)\n      };\n      var i = 0;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = shader.attList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var key = _step5.value;\n          this.VBOList.push(dataDictionary[key]);\n\n          if (key == 'color') {\n            this.colorIndex = i;\n          }\n\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.indexLength = index.length;\n      this.Index = w.create_ibo(index);\n      return this;\n    }\n  }]);\n\n  return Texture;\n}(Element);\n\nvar ImgTexture = /*#__PURE__*/function () {\n  function ImgTexture(gl) {\n    _classCallCheck(this, ImgTexture);\n\n    this.gl = gl;\n  }\n\n  _createClass(ImgTexture, [{\n    key: \"init\",\n    value: function init(sourcePath) {\n      this.t = null;\n      this.changeImg(sourcePath);\n      return this;\n    }\n  }, {\n    key: \"changeImg\",\n    value: function changeImg(sourcePath) {\n      var _this = this;\n\n      var img = new Image();\n\n      img.onload = function () {\n        var tex = _this.gl.createTexture();\n\n        _this.gl.bindTexture(_this.gl.TEXTURE_2D, tex);\n\n        _this.gl.texImage2D(_this.gl.TEXTURE_2D, 0, _this.gl.RGBA, _this.gl.RGBA, _this.gl.UNSIGNED_BYTE, img);\n\n        _this.gl.generateMipmap(_this.gl.TEXTURE_2D);\n\n        _this.gl.bindTexture(_this.gl.TEXTURE_2D, null);\n\n        _this.t = tex;\n      };\n\n      img.src = sourcePath;\n    }\n  }]);\n\n  return ImgTexture;\n}();\n\nvar torus = function torus(row, column, irad, orad, color) {\n  var pos = new Array(),\n      nor = new Array(),\n      col = new Array(),\n      st = new Array(),\n      idx = new Array();\n\n  for (var _i2 = 0; _i2 <= row; _i2++) {\n    var _r = Math.PI * 2 / row * _i2;\n\n    var rr = Math.cos(_r);\n    var ry = Math.sin(_r);\n\n    for (var _ii = 0; _ii <= column; _ii++) {\n      var tr = Math.PI * 2 / column * _ii;\n      var tx = (rr * irad + orad) * Math.cos(tr);\n      var ty = ry * irad;\n      var tz = (rr * irad + orad) * Math.sin(tr);\n      var rx = rr * Math.cos(tr);\n      var rz = rr * Math.sin(tr);\n\n      if (color) {\n        var _tc = color;\n      } else {\n        tc = hsva(360 / column * _ii, 1, 1, 1);\n      }\n\n      var rs = 1 / column * _ii;\n      var rt = 1 / row * _i2 + 0.5;\n\n      if (rt > 1.0) {\n        rt -= 1.0;\n      }\n\n      rt = 1.0 - rt;\n      pos.push(tx, ty, tz);\n      nor.push(rx, ry, rz);\n      col.push(tc[0], tc[1], tc[2], tc[3]);\n      st.push(rs, rt);\n    }\n  }\n\n  for (i = 0; i < row; i++) {\n    for (ii = 0; ii < column; ii++) {\n      r = (column + 1) * i + ii;\n      idx.push(r, r + column + 1, r + 1);\n      idx.push(r + column + 1, r + column + 2, r + 1);\n    }\n  }\n\n  return {\n    p: pos,\n    n: nor,\n    c: col,\n    t: st,\n    i: idx\n  };\n};\n\nvar sphere = function sphere(row, column, rad, color) {\n  var pos = new Array(),\n      nor = new Array(),\n      col = new Array(),\n      st = new Array(),\n      idx = new Array(),\n      tc;\n\n  for (var _i3 = 0; _i3 <= row; _i3++) {\n    var _r2 = Math.PI / row * _i3;\n\n    var ry = Math.cos(_r2);\n    var rr = Math.sin(_r2);\n\n    for (var _ii2 = 0; _ii2 <= column; _ii2++) {\n      var tr = Math.PI * 2 / column * _ii2;\n      var tx = rr * rad * Math.cos(tr);\n      var ty = ry * rad;\n      var tz = rr * rad * Math.sin(tr);\n      var rx = rr * Math.cos(tr);\n      var rz = rr * Math.sin(tr);\n\n      if (color) {\n        tc = color;\n      } else {\n        tc = hsva(360 / row * _i3, 1, 1, 1);\n      }\n\n      pos.push(tx, ty, tz);\n      nor.push(rx, ry, rz);\n      col.push(tc[0], tc[1], tc[2], tc[3]);\n      st.push(1 - 1 / column * _ii2, 1 / row * _i3);\n    }\n  }\n\n  r = 0;\n\n  for (i = 0; i < row; i++) {\n    for (ii = 0; ii < column; ii++) {\n      r = (column + 1) * i + ii;\n      idx.push(r, r + 1, r + column + 2);\n      idx.push(r, r + column + 2, r + column + 1);\n    }\n  }\n\n  return {\n    p: pos,\n    n: nor,\n    c: col,\n    t: st,\n    i: idx\n  };\n};\n\nvar cube = function cube(side, color) {\n  var hs = side * 0.5;\n  var pos = [-hs, -hs, hs, hs, -hs, hs, hs, hs, hs, -hs, hs, hs, -hs, -hs, -hs, -hs, hs, -hs, hs, hs, -hs, hs, -hs, -hs, -hs, hs, -hs, -hs, hs, hs, hs, hs, hs, hs, hs, -hs, -hs, -hs, -hs, hs, -hs, -hs, hs, -hs, hs, -hs, -hs, hs, hs, -hs, -hs, hs, hs, -hs, hs, hs, hs, hs, -hs, hs, -hs, -hs, -hs, -hs, -hs, hs, -hs, hs, hs, -hs, hs, -hs];\n  var nor = [-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0];\n  var tc,\n      col = new Array();\n\n  for (var _i4 = 0; _i4 < pos.length / 3; _i4++) {\n    if (color) {\n      tc = color;\n    } else {\n      tc = hsva(360 / pos.length / 3 * _i4, 1, 1, 1);\n    }\n\n    col.push(tc[0], tc[1], tc[2], tc[3]);\n  }\n\n  var st = [0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0];\n  var idx = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23];\n  return {\n    p: pos,\n    n: nor,\n    c: col,\n    t: st,\n    i: idx\n  };\n};\n\nvar hsva = function hsva(h, s, v, a) {\n  if (s > 1 || v > 1 || a > 1) {\n    return;\n  }\n\n  var th = h % 360;\n  var i = Math.floor(th / 60);\n  var f = th / 60 - i;\n  var m = v * (1 - s);\n  var n = v * (1 - s * f);\n  var k = v * (1 - s * (1 - f));\n  var color = new Array();\n\n  if (!s > 0 && !s < 0) {\n    color.push(v, v, v, a);\n  } else {\n    var _r3 = new Array(v, n, m, m, k, v);\n\n    var g = new Array(k, v, v, n, m, m);\n    var b = new Array(m, m, k, v, v, n);\n    color.push(_r3[i], g[i], b[i], a);\n  }\n\n  return color;\n};\n\n//# sourceURL=webpack:///./Elements.js?");

/***/ }),

/***/ "./Setup.js":
/*!******************!*\
  !*** ./Setup.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// canvas周りとglのセットアップ\nvar c = document.getElementById('canvas');\nc.width = 2048;\nc.height = 2048;\nvar fps = 60;\nvar count = 0;\nvar gl = c.getContext('webgl') || c.getContext('experimental-webgl'); // カリング、深度テスト\n// this.gl.depthFunc(this.gl.LEQUAL);\n//------------------------ 以下自作ライブラリ ------------------------ //\n\nvar shaderManager = /*#__PURE__*/function () {\n  function shaderManager(gl, vs, fs) {\n    var _this = this;\n\n    _classCallCheck(this, shaderManager);\n\n    // programの作成、使用するattributeとuniformのリスト作成\n    var v_shader = this.w.create_shader(vs);\n    var f_shader = this.w.create_shader(fs);\n    this.gl = gl;\n    this.w = new wgld(gl);\n    this.prg = this.w.create_program(v_shader, f_shader);\n    this.cap = [];\n    this.attList = [];\n    this.attLocation = [];\n    this.attStride = [];\n    this.uniLocation = {};\n    this.uniformFunction = {};\n    this.currentInstance = null; //--------------------attribute, uniform--------------------//\n\n    var uniformMatrix4fv = function uniformMatrix4fv(variable, argument) {\n      _this.gl.uniformMatrix4fv(variable, false, argument);\n    };\n\n    var uniform1i = function uniform1i(variable, argument) {\n      _this.gl.uniform1i(variable, argument);\n    };\n\n    var uniform1f = function uniform1f(variable, argument) {\n      _this.gl.uniform1f(variable, argument);\n    };\n\n    var uniform2fv = function uniform2fv(variable, argument) {\n      _this.gl.uniform2fv(variable, argument);\n    };\n\n    var uniform3fv = function uniform3fv(variable, argument) {\n      _this.gl.uniform3fv(variable, argument);\n    };\n\n    var uniform4fv = function uniform4fv(variable, argument) {\n      _this.gl.uniform4fv(variable, argument);\n    };\n\n    var attribute = {\n      'position': 3,\n      'normal': 3,\n      'color': 4,\n      'textureCoord': 2\n    };\n    var uniformFunction = {\n      'mat4': uniformMatrix4fv,\n      'vec4': uniform4fv,\n      'vec3': uniform3fv,\n      'vec2': uniform2fv,\n      'float': uniform1f,\n      'int': uniform1i,\n      'sampler2D': uniform1i,\n      'bool': uniform1i\n    };\n    var shaderData = document.getElementById(vs).innerText.split(';').concat(document.getElementById(fs).innerText.split(';'));\n    var key, funcKey;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = shaderData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var text = _step.value;\n\n        if (text.indexOf('attribute') + 1) {\n          this.attList.push(text.split(' ').slice(-1)[0]);\n        } else if (text.indexOf('uniform') + 1) {\n          key = text.split(' ').slice(-1)[0];\n          funcKey = text.split(' ').filter(function (e) {\n            return e != '';\n          }).slice(-2)[0];\n          this.uniLocation[key] = this.gl.getUniformLocation(this.prg, key);\n          this.uniformFunction[key] = uniformFunction[funcKey];\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = this.attList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _key = _step2.value;\n        this.attLocation.push(this.gl.getAttribLocation(this.prg, _key));\n        this.attStride.push(attribute[_key]);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  _createClass(shaderManager, [{\n    key: \"clear\",\n    value: function clear(backColor) {\n      this.gl.clearColor(backColor[0], backColor[1], backColor[2], backColor[3]);\n      this.gl.clearDepth(1.0);\n      this.gl.clearStencil(0);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT | this.gl.STENCIL_BUFFER_BIT);\n    }\n  }, {\n    key: \"setCapability\",\n    value: function setCapability(cap) {\n      this.cap.push(cap);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(instance, callback) {\n      this.w.set_attribute(instance.VBOList, this.attLocation, this.attStride);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, instance.Index);\n      this.currentInstance = instance;\n      callback();\n      this.currentInstance = null;\n    }\n  }, {\n    key: \"setUniform\",\n    value: function setUniform(key, argument) {\n      this.uniformFunction[key](this.uniLocation[key], argument);\n    }\n  }, {\n    key: \"drawElement\",\n    value: function drawElement(constant) {\n      for (var unit in this.currentInstance.texture) {\n        this.gl.activeTexture(this.gl.TEXTURE0 + Number(unit));\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.currentInstance.texture[unit]);\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.currentInstance.cap[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var cap = _step3.value;\n          this.gl.enable(cap);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.currentInstance.unCap[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _cap = _step4.value;\n          this.gl.disable(_cap);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var stencil = this.currentInstance.stencilSetting;\n      this.gl.stencilFunc(stencil[0], stencil[1], stencil[2]);\n      this.gl.stencilOp(stencil[3], stencil[4], stencil[5]);\n      var argument;\n\n      for (var _key2 in this.currentInstance.uniform) {\n        try {\n          argument = this.currentInstance.uniform[_key2];\n          this.setUniform(_key2, argument);\n        } catch (e) {\n          console.log('uniformKey : ' + _key2, 'argument : ' + argument);\n          console.error(e.message);\n        }\n      }\n\n      this.gl.drawElements(constant, this.currentInstance.indexLength, this.gl.UNSIGNED_SHORT, 0);\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.currentInstance.cap[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _cap2 = _step5.value;\n          this.gl.disable(_cap2);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.currentInstance.unCap[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _cap3 = _step6.value;\n          this.gl.enable(_cap3);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    } // drawMergedElements (MergeInstance, constant) {\n    //     for (let childMergeInstance of MergeInstance.mergeInstance) {\n    //         arguments.callee(childMergeInstance, constant);\n    //     }\n    //     this.gl.activeTexture(this.gl.TEXTURE0 + MergeInstance.textureUnit);\n    //     this.gl.bindTexture(this.gl.TEXTURE_2D, MergeInstance.texture);\n    //     let argument;\n    //     for (let key in MergeInstance.uniform) {\n    //         argument = MergeInstance.uniform[key];\n    //         this.setUniform(key, argument);\n    //     }\n    //     for (let className in MergeInstance.element) {\n    //         this.setAttribute(MergeInstance.element[className][0], () => {\n    //             for (let i in MergeInstance.element[className]) {\n    //                 this.currentInstance = MergeInstance.element[className][i];\n    //                 this.drawElement(constant);\n    //             }\n    //         })\n    //     }\n    // }\n\n  }]);\n\n  return shaderManager;\n}();\n\nvar canvasManager = /*#__PURE__*/function () {\n  function canvasManager(gl) {\n    _classCallCheck(this, canvasManager);\n\n    this.gl = gl;\n    this.w = new wgld(gl);\n  }\n\n  _createClass(canvasManager, [{\n    key: \"switchShader\",\n    value: function switchShader(shaderManager, callback) {\n      this.gl.useProgram(shaderManager.prg);\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = shaderManager.cap[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var cap = _step7.value;\n          this.gl.enable(cap);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      callback();\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = shaderManager.cap[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _cap4 = _step8.value;\n          this.gl.disable(_cap4);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setFrameBuffer\",\n    value: function setFrameBuffer(frameBufferF, callback) {\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, frameBufferF);\n      callback();\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n    }\n  }, {\n    key: \"createFrameBuffer\",\n    value: function createFrameBuffer(width, height) {\n      return this.w.create_framebuffer(width, height);\n    }\n  }]);\n\n  return canvasManager;\n}();\n\nsum = function sum(a, b) {\n  var c = [];\n\n  for (var i in a) {\n    c.push(a[i] + b[i]);\n  }\n\n  return c;\n};\n\ndiff = function diff(a, b) {\n  var c = [];\n\n  for (var i in a) {\n    c.push(a[i] - b[i]);\n  }\n\n  return c;\n};\n\nprod = function prod(a, b) {\n  var c = [];\n\n  for (var i in a) {\n    c.push(a[i] * b[i]);\n  }\n};\n\nquot = function quot(a, b) {\n  var c = [];\n\n  for (var i in a) {\n    c.push(a[i] / b[i]);\n  }\n};\n\nradian = function radian(degree) {\n  return degree / 180 * Math.PI;\n};\n\n//# sourceURL=webpack:///./Setup.js?");

/***/ }),

/***/ "./init.js":
/*!*****************!*\
  !*** ./init.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Setup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Setup */ \"./Setup.js\");\n/* harmony import */ var _Setup__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Setup__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Elements */ \"./Elements.js\");\n/* harmony import */ var _Elements__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Elements__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _minMatrixb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./minMatrixb */ \"./minMatrixb.js\");\n/* harmony import */ var _minMatrixb__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_minMatrixb__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nfunction smgl(gl) {\n  return {\n    CM: new _Setup__WEBPACK_IMPORTED_MODULE_0__[\"canvasManager\"](gl),\n    SM: new _Setup__WEBPACK_IMPORTED_MODULE_0__[\"shaderManager\"](gl),\n    m: new _minMatrixb__WEBPACK_IMPORTED_MODULE_2__[\"matIV\"](),\n    q: new _minMatrixb__WEBPACK_IMPORTED_MODULE_2__[\"qtnIV\"](),\n    Point: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](gl),\n    Cube: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"Cube\"](gl),\n    Sphere: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"Sphere\"](gl),\n    Torus: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"Torus\"](gl),\n    Texture: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"Texture\"](gl),\n    ImgTexture: new _Elements__WEBPACK_IMPORTED_MODULE_1__[\"ImgTexture\"](gl)\n  };\n}\n\n//# sourceURL=webpack:///./init.js?");

/***/ }),

/***/ "./minMatrixb.js":
/*!***********************!*\
  !*** ./minMatrixb.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// ------------------------------------------------------------------------------------------------\n// minMatrixb.js\n// version 0.0.2\n// Copyright (c) doxas\n// ------------------------------------------------------------------------------------------------\nfunction matIV() {\n  this.create = function () {\n    return new Float32Array(16);\n  };\n\n  this.identity = function () {\n    var dest = this.create();\n    dest[0] = 1;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = 1;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = 0;\n    dest[9] = 0;\n    dest[10] = 1;\n    dest[11] = 0;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = 0;\n    dest[15] = 1;\n    return dest;\n  };\n\n  this.multiply = function (mat1, mat2) {\n    var dest = this.create();\n    var a = mat1[0],\n        b = mat1[1],\n        c = mat1[2],\n        d = mat1[3],\n        e = mat1[4],\n        f = mat1[5],\n        g = mat1[6],\n        h = mat1[7],\n        i = mat1[8],\n        j = mat1[9],\n        k = mat1[10],\n        l = mat1[11],\n        m = mat1[12],\n        n = mat1[13],\n        o = mat1[14],\n        p = mat1[15],\n        A = mat2[0],\n        B = mat2[1],\n        C = mat2[2],\n        D = mat2[3],\n        E = mat2[4],\n        F = mat2[5],\n        G = mat2[6],\n        H = mat2[7],\n        I = mat2[8],\n        J = mat2[9],\n        K = mat2[10],\n        L = mat2[11],\n        M = mat2[12],\n        N = mat2[13],\n        O = mat2[14],\n        P = mat2[15];\n    dest[0] = A * a + B * e + C * i + D * m;\n    dest[1] = A * b + B * f + C * j + D * n;\n    dest[2] = A * c + B * g + C * k + D * o;\n    dest[3] = A * d + B * h + C * l + D * p;\n    dest[4] = E * a + F * e + G * i + H * m;\n    dest[5] = E * b + F * f + G * j + H * n;\n    dest[6] = E * c + F * g + G * k + H * o;\n    dest[7] = E * d + F * h + G * l + H * p;\n    dest[8] = I * a + J * e + K * i + L * m;\n    dest[9] = I * b + J * f + K * j + L * n;\n    dest[10] = I * c + J * g + K * k + L * o;\n    dest[11] = I * d + J * h + K * l + L * p;\n    dest[12] = M * a + N * e + O * i + P * m;\n    dest[13] = M * b + N * f + O * j + P * n;\n    dest[14] = M * c + N * g + O * k + P * o;\n    dest[15] = M * d + N * h + O * l + P * p;\n    return dest;\n  };\n\n  this.scale = function (mat, vec) {\n    var dest = this.create();\n    dest[0] = mat[0] * vec[0];\n    dest[1] = mat[1] * vec[0];\n    dest[2] = mat[2] * vec[0];\n    dest[3] = mat[3] * vec[0];\n    dest[4] = mat[4] * vec[1];\n    dest[5] = mat[5] * vec[1];\n    dest[6] = mat[6] * vec[1];\n    dest[7] = mat[7] * vec[1];\n    dest[8] = mat[8] * vec[2];\n    dest[9] = mat[9] * vec[2];\n    dest[10] = mat[10] * vec[2];\n    dest[11] = mat[11] * vec[2];\n    dest[12] = mat[12];\n    dest[13] = mat[13];\n    dest[14] = mat[14];\n    dest[15] = mat[15];\n    return dest;\n  };\n\n  this.translate = function (mat, vec) {\n    var dest = this.create();\n    dest[0] = mat[0];\n    dest[1] = mat[1];\n    dest[2] = mat[2];\n    dest[3] = mat[3];\n    dest[4] = mat[4];\n    dest[5] = mat[5];\n    dest[6] = mat[6];\n    dest[7] = mat[7];\n    dest[8] = mat[8];\n    dest[9] = mat[9];\n    dest[10] = mat[10];\n    dest[11] = mat[11];\n    dest[12] = mat[0] * vec[0] + mat[4] * vec[1] + mat[8] * vec[2] + mat[12];\n    dest[13] = mat[1] * vec[0] + mat[5] * vec[1] + mat[9] * vec[2] + mat[13];\n    dest[14] = mat[2] * vec[0] + mat[6] * vec[1] + mat[10] * vec[2] + mat[14];\n    dest[15] = mat[3] * vec[0] + mat[7] * vec[1] + mat[11] * vec[2] + mat[15];\n    return dest;\n  };\n\n  this.rotate = function (mat, angle, axis) {\n    var dest = this.create();\n    var sq = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n    if (!sq) {\n      return null;\n    }\n\n    var a = axis[0],\n        b = axis[1],\n        c = axis[2];\n\n    if (sq != 1) {\n      sq = 1 / sq;\n      a *= sq;\n      b *= sq;\n      c *= sq;\n    }\n\n    var d = Math.sin(angle),\n        e = Math.cos(angle),\n        f = 1 - e,\n        g = mat[0],\n        h = mat[1],\n        i = mat[2],\n        j = mat[3],\n        k = mat[4],\n        l = mat[5],\n        m = mat[6],\n        n = mat[7],\n        o = mat[8],\n        p = mat[9],\n        q = mat[10],\n        r = mat[11],\n        s = a * a * f + e,\n        t = b * a * f + c * d,\n        u = c * a * f - b * d,\n        v = a * b * f - c * d,\n        w = b * b * f + e,\n        x = c * b * f + a * d,\n        y = a * c * f + b * d,\n        z = b * c * f - a * d,\n        A = c * c * f + e;\n\n    if (angle) {\n      if (mat != dest) {\n        dest[12] = mat[12];\n        dest[13] = mat[13];\n        dest[14] = mat[14];\n        dest[15] = mat[15];\n      }\n    } else {\n      dest = mat;\n    }\n\n    dest[0] = g * s + k * t + o * u;\n    dest[1] = h * s + l * t + p * u;\n    dest[2] = i * s + m * t + q * u;\n    dest[3] = j * s + n * t + r * u;\n    dest[4] = g * v + k * w + o * x;\n    dest[5] = h * v + l * w + p * x;\n    dest[6] = i * v + m * w + q * x;\n    dest[7] = j * v + n * w + r * x;\n    dest[8] = g * y + k * z + o * A;\n    dest[9] = h * y + l * z + p * A;\n    dest[10] = i * y + m * z + q * A;\n    dest[11] = j * y + n * z + r * A;\n    return dest;\n  };\n\n  this.lookAt = function (eye, center, up) {\n    var dest = this.create();\n    var eyeX = eye[0],\n        eyeY = eye[1],\n        eyeZ = eye[2],\n        upX = up[0],\n        upY = up[1],\n        upZ = up[2],\n        centerX = center[0],\n        centerY = center[1],\n        centerZ = center[2];\n\n    if (eyeX == centerX && eyeY == centerY && eyeZ == centerZ) {\n      return this.identity(dest);\n    }\n\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, l;\n    z0 = eyeX - center[0];\n    z1 = eyeY - center[1];\n    z2 = eyeZ - center[2];\n    l = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= l;\n    z1 *= l;\n    z2 *= l;\n    x0 = upY * z2 - upZ * z1;\n    x1 = upZ * z0 - upX * z2;\n    x2 = upX * z1 - upY * z0;\n    l = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n    if (!l) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      l = 1 / l;\n      x0 *= l;\n      x1 *= l;\n      x2 *= l;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n    l = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n    if (!l) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      l = 1 / l;\n      y0 *= l;\n      y1 *= l;\n      y2 *= l;\n    }\n\n    dest[0] = x0;\n    dest[1] = y0;\n    dest[2] = z0;\n    dest[3] = 0;\n    dest[4] = x1;\n    dest[5] = y1;\n    dest[6] = z1;\n    dest[7] = 0;\n    dest[8] = x2;\n    dest[9] = y2;\n    dest[10] = z2;\n    dest[11] = 0;\n    dest[12] = -(x0 * eyeX + x1 * eyeY + x2 * eyeZ);\n    dest[13] = -(y0 * eyeX + y1 * eyeY + y2 * eyeZ);\n    dest[14] = -(z0 * eyeX + z1 * eyeY + z2 * eyeZ);\n    dest[15] = 1;\n    return dest;\n  };\n\n  this.perspective = function (fovy, aspect, near, far) {\n    var dest = this.create();\n    var t = near * Math.tan(fovy * Math.PI / 360);\n    var r = t * aspect;\n    var a = r * 2,\n        b = t * 2,\n        c = far - near;\n    dest[0] = near * 2 / a;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = near * 2 / b;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = 0;\n    dest[9] = 0;\n    dest[10] = -(far + near) / c;\n    dest[11] = -1;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = -(far * near * 2) / c;\n    dest[15] = 0;\n    return dest;\n  };\n\n  this.ortho = function (left, right, top, bottom, near, far) {\n    var dest = this.create();\n    var h = right - left;\n    var v = top - bottom;\n    var d = far - near;\n    dest[0] = 2 / h;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 0;\n    dest[4] = 0;\n    dest[5] = 2 / v;\n    dest[6] = 0;\n    dest[7] = 0;\n    dest[8] = 0;\n    dest[9] = 0;\n    dest[10] = -2 / d;\n    dest[11] = 0;\n    dest[12] = -(left + right) / h;\n    dest[13] = -(top + bottom) / v;\n    dest[14] = -(far + near) / d;\n    dest[15] = 1;\n    return dest;\n  };\n\n  this.transpose = function (mat) {\n    var dest = this.create();\n    dest[0] = mat[0];\n    dest[1] = mat[4];\n    dest[2] = mat[8];\n    dest[3] = mat[12];\n    dest[4] = mat[1];\n    dest[5] = mat[5];\n    dest[6] = mat[9];\n    dest[7] = mat[13];\n    dest[8] = mat[2];\n    dest[9] = mat[6];\n    dest[10] = mat[10];\n    dest[11] = mat[14];\n    dest[12] = mat[3];\n    dest[13] = mat[7];\n    dest[14] = mat[11];\n    dest[15] = mat[15];\n    return dest;\n  };\n\n  this.inverse = function (mat) {\n    var dest = this.create();\n    var a = mat[0],\n        b = mat[1],\n        c = mat[2],\n        d = mat[3],\n        e = mat[4],\n        f = mat[5],\n        g = mat[6],\n        h = mat[7],\n        i = mat[8],\n        j = mat[9],\n        k = mat[10],\n        l = mat[11],\n        m = mat[12],\n        n = mat[13],\n        o = mat[14],\n        p = mat[15],\n        q = a * f - b * e,\n        r = a * g - c * e,\n        s = a * h - d * e,\n        t = b * g - c * f,\n        u = b * h - d * f,\n        v = c * h - d * g,\n        w = i * n - j * m,\n        x = i * o - k * m,\n        y = i * p - l * m,\n        z = j * o - k * n,\n        A = j * p - l * n,\n        B = k * p - l * o,\n        ivd = 1 / (q * B - r * A + s * z + t * y - u * x + v * w);\n    dest[0] = (f * B - g * A + h * z) * ivd;\n    dest[1] = (-b * B + c * A - d * z) * ivd;\n    dest[2] = (n * v - o * u + p * t) * ivd;\n    dest[3] = (-j * v + k * u - l * t) * ivd;\n    dest[4] = (-e * B + g * y - h * x) * ivd;\n    dest[5] = (a * B - c * y + d * x) * ivd;\n    dest[6] = (-m * v + o * s - p * r) * ivd;\n    dest[7] = (i * v - k * s + l * r) * ivd;\n    dest[8] = (e * A - f * y + h * w) * ivd;\n    dest[9] = (-a * A + b * y - d * w) * ivd;\n    dest[10] = (m * u - n * s + p * q) * ivd;\n    dest[11] = (-i * u + j * s - l * q) * ivd;\n    dest[12] = (-e * z + f * x - g * w) * ivd;\n    dest[13] = (a * z - b * x + c * w) * ivd;\n    dest[14] = (-m * t + n * r - o * q) * ivd;\n    dest[15] = (i * t - j * r + k * q) * ivd;\n    return dest;\n  };\n\n  this.orthographicMatrix = function () {\n    var vMatrix = this.lookAt([0.0, 0.0, 0.5], [0.0, 0.0, 0.0], [0, 1, 0]);\n    var pMatrix = this.ortho(-1.0, 1.0, 1.0, -1.0, 0.1, 1);\n    return this.multiply(pMatrix, vMatrix);\n  };\n}\n\nfunction qtnIV() {\n  this.create = function () {\n    return new Float32Array(4);\n  };\n\n  this.identity = function (dest) {\n    dest[0] = 0;\n    dest[1] = 0;\n    dest[2] = 0;\n    dest[3] = 1;\n    return dest;\n  };\n\n  this.inverse = function (qtn, dest) {\n    dest[0] = -qtn[0];\n    dest[1] = -qtn[1];\n    dest[2] = -qtn[2];\n    dest[3] = qtn[3];\n    return dest;\n  };\n\n  this.normalize = function (dest) {\n    var x = dest[0],\n        y = dest[1],\n        z = dest[2],\n        w = dest[3];\n    var l = Math.sqrt(x * x + y * y + z * z + w * w);\n\n    if (l === 0) {\n      dest[0] = 0;\n      dest[1] = 0;\n      dest[2] = 0;\n      dest[3] = 0;\n    } else {\n      l = 1 / l;\n      dest[0] = x * l;\n      dest[1] = y * l;\n      dest[2] = z * l;\n      dest[3] = w * l;\n    }\n\n    return dest;\n  };\n\n  this.multiply = function (qtn1, qtn2, dest) {\n    var ax = qtn1[0],\n        ay = qtn1[1],\n        az = qtn1[2],\n        aw = qtn1[3];\n    var bx = qtn2[0],\n        by = qtn2[1],\n        bz = qtn2[2],\n        bw = qtn2[3];\n    dest[0] = ax * bw + aw * bx + ay * bz - az * by;\n    dest[1] = ay * bw + aw * by + az * bx - ax * bz;\n    dest[2] = az * bw + aw * bz + ax * by - ay * bx;\n    dest[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return dest;\n  };\n\n  this.rotate = function (angle, axis, dest) {\n    var sq = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n\n    if (!sq) {\n      return null;\n    }\n\n    var a = axis[0],\n        b = axis[1],\n        c = axis[2];\n\n    if (sq != 1) {\n      sq = 1 / sq;\n      a *= sq;\n      b *= sq;\n      c *= sq;\n    }\n\n    var s = Math.sin(angle * 0.5);\n    dest[0] = a * s;\n    dest[1] = b * s;\n    dest[2] = c * s;\n    dest[3] = Math.cos(angle * 0.5);\n    return dest;\n  };\n\n  this.toVecIII = function (vec, qtn, dest) {\n    var qp = this.create();\n    var qq = this.create();\n    var qr = this.create();\n    this.inverse(qtn, qr);\n    qp[0] = vec[0];\n    qp[1] = vec[1];\n    qp[2] = vec[2];\n    this.multiply(qr, qp, qq);\n    this.multiply(qq, qtn, qr);\n    dest[0] = qr[0];\n    dest[1] = qr[1];\n    dest[2] = qr[2];\n    return dest;\n  };\n\n  this.toMatIV = function (qtn, dest) {\n    var x = qtn[0],\n        y = qtn[1],\n        z = qtn[2],\n        w = qtn[3];\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    dest[0] = 1 - (yy + zz);\n    dest[1] = xy - wz;\n    dest[2] = xz + wy;\n    dest[3] = 0;\n    dest[4] = xy + wz;\n    dest[5] = 1 - (xx + zz);\n    dest[6] = yz - wx;\n    dest[7] = 0;\n    dest[8] = xz - wy;\n    dest[9] = yz + wx;\n    dest[10] = 1 - (xx + yy);\n    dest[11] = 0;\n    dest[12] = 0;\n    dest[13] = 0;\n    dest[14] = 0;\n    dest[15] = 1;\n    return dest;\n  };\n\n  this.slerp = function (qtn1, qtn2, time, dest) {\n    var ht = qtn1[0] * qtn2[0] + qtn1[1] * qtn2[1] + qtn1[2] * qtn2[2] + qtn1[3] * qtn2[3];\n    var hs = 1.0 - ht * ht;\n\n    if (hs <= 0.0) {\n      dest[0] = qtn1[0];\n      dest[1] = qtn1[1];\n      dest[2] = qtn1[2];\n      dest[3] = qtn1[3];\n    } else {\n      hs = Math.sqrt(hs);\n\n      if (Math.abs(hs) < 0.0001) {\n        dest[0] = qtn1[0] * 0.5 + qtn2[0] * 0.5;\n        dest[1] = qtn1[1] * 0.5 + qtn2[1] * 0.5;\n        dest[2] = qtn1[2] * 0.5 + qtn2[2] * 0.5;\n        dest[3] = qtn1[3] * 0.5 + qtn2[3] * 0.5;\n      } else {\n        var ph = Math.acos(ht);\n        var pt = ph * time;\n        var t0 = Math.sin(ph - pt) / hs;\n        var t1 = Math.sin(pt) / hs;\n        dest[0] = qtn1[0] * t0 + qtn2[0] * t1;\n        dest[1] = qtn1[1] * t0 + qtn2[1] * t1;\n        dest[2] = qtn1[2] * t0 + qtn2[2] * t1;\n        dest[3] = qtn1[3] * t0 + qtn2[3] * t1;\n      }\n    }\n\n    return dest;\n  };\n}\n\n//# sourceURL=webpack:///./minMatrixb.js?");

/***/ })

/******/ });